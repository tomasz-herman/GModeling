package pl.edu.pw.mini.mg1.layout;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import pl.edu.pw.mini.mg1.graphics.Renderer;

import javax.swing.*;
import java.awt.*;

public class RendererController implements Controller<Renderer> {

    private JPanel mainPane;
    private JRadioButton stereoRadioButton;
    private JRadioButton monoRadioButton;
    private JCheckBox grayscaleCheckBox;
    private JRadioButton stereoAlternativeRadioButton;
    private Renderer renderer;

    public RendererController() {
        stereoRadioButton.addActionListener(e -> {
            if (renderer != null) renderer.setRenderFunction(renderer::renderStereo);
        });
        stereoAlternativeRadioButton.addActionListener(e -> {
            if (renderer != null) renderer.setRenderFunction(renderer::renderStereoWithExtraSteps);
        });
        monoRadioButton.addActionListener(e -> {
            if (renderer != null) renderer.setRenderFunction(renderer::render);
        });
        grayscaleCheckBox.addActionListener(e -> {
            if (renderer != null) renderer.setGrayscale(grayscaleCheckBox.isSelected());
        });
    }

    @Override
    public void set(Renderer renderer) {
        this.renderer = renderer;
        refresh();
    }

    @Override
    public Container getMainPane() {
        return mainPane;
    }

    @Override
    public void refresh() {
        stereoRadioButton.setSelected(false);
        stereoAlternativeRadioButton.setSelected(false);
        monoRadioButton.setSelected(true);
        grayscaleCheckBox.setSelected(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPane = new javax.swing.JPanel();
        mainPane.setLayout(new GridLayoutManager(5, 1, new java.awt.Insets(0, 0, 0, 0), -1, -1));
        stereoRadioButton = new javax.swing.JRadioButton();
        mainPane.add(stereoRadioButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPane.add(spacer1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        monoRadioButton = new javax.swing.JRadioButton();
        mainPane.add(monoRadioButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        grayscaleCheckBox = new javax.swing.JCheckBox();
        mainPane.add(grayscaleCheckBox, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        stereoAlternativeRadioButton = new javax.swing.JRadioButton();
        mainPane.add(stereoAlternativeRadioButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        javax.swing.ButtonGroup buttonGroup;
        buttonGroup = new javax.swing.ButtonGroup();
        buttonGroup.add(monoRadioButton);
        buttonGroup.add(stereoRadioButton);
        buttonGroup.add(stereoAlternativeRadioButton);
    }

    /**
     * @noinspection ALL
     */
    public javax.swing.JComponent $$$getRootComponent$$$() {
        return mainPane;
    }

}
